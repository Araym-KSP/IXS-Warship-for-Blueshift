@PART[wsWarpTank250]:NEEDS[WildBlueIndustries/Blueshift&WildBlueIndustries/FlyingSaucers&!FarFutureTechnologies]
{
	!TechRequired = experimentalRocketry
	
	TechRequired:NEEDS[CommunityTechTree] = unifiedFieldTheory
	TechRequired:NEEDS[!CommunityTechTree] = wbiWarpTech
	
	%category = Engine
	
	%entryCost = 950000
	%cost = 190000
	
	%title = WP-2500 Gravimetric Displacement Generator
	
	%description = For all the needs of fueling those warp coils, to achieve faster-than-light speed, our engineers came out with this compact but still very functional Gravimetric Displacement Generator. Warranty obviously void once you bring it in space's void.
	
	%mass = 3
	
	%crashTolerance = 20
	%thermalMassModifier = 8.0
	%emissiveConstant = 0.95
	
	%explosionPotential = 0.1
	
	%breakingForce = 500000
	%breakingTorque = 500000
	
	!heatConductivity = 0.04
	
	%tags = ixs warp graviolium
	
	!RESOURCE[LqdDeuterium] { }
	!MODULE[ContainmentSystem] { }
	
	// Graviolium is normally not a tweakable resource, meaning you have to fill up your tanks while in flight.
	// Without Kerbal Flying Saucers, the only way to get the resource is to mine asteroids.
	// But this cheat lets you tweak the resource in the editor.
	MODULE
	{
		name = WBIResourceTweaker
		resourceName = Graviolium
		tweakEnabledName = CHEAT: Enable Graviolium tweak
		tweakDisabledName = CHEAT: Disable Graviolium tweak
	}
	
	MODULE
	{
		name = WBIModuleGeneratorFX
//		debugMode = true

		// Setting this to the same value as WBIWarpEngine's warpPowerGeneratorID field lets the warp engine control the generator.
		// If the generator controls effects and/or animated textures, then they'll be affected by the throttle updates.
		moduleID = warpPower

		// This also replaces the name shown in the editor.
		ConverterName = Auxilary Power

		// Short description of the module as displayed in the editor.
		moduleDescription = Provides auxilary gravitic power.

		StartActionName = Activate Auxiliary Power
		StopActionName = Deactivate Auxiliary Power
		ToggleActionName = Toggle Auxiliary Power

		// Generators can control animated textures
		// Hint: You can control multiple animated textures in the same part if they share the same moduleID.
		//textureModuleID = FusionTorus

		// Generators can control effects too
//		startEffect = effectStart
//		stopEffect = effectStop
		runningEffect = running

		// In hours, the mean time between failures. Assumes that parts require maintenance.
		mtbf = 200

		// The minimum level of skill required to repair the part.
		// You can also change repairSkill, which defaults to "RepairSkill" (Engineers have this).
		// You can also change the repairKitName, which defaults to "evaRepairKit" (the stock EVA Repair Kit).
		minimumSkillLevel = 1

		// When parts require maintenance, how many repair kits are required to repair the part.
		repairKitsRequired = 2

		INPUT_RESOURCE
		{
			ResourceName = Graviolium
			Ratio = 0.004
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = FusionPellets
			Ratio = 0.0001
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 100
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectroPlasma
			Ratio = 2800
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = StaticCharge
			Ratio = 0.004
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
		DRAINED_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 10
		}
	}


	RESOURCE
	{
		name = FusionPellets
		amount = 96
		maxAmount = 96
	}

	RESOURCE
	{
		name = Graviolium
		amount = 0
		maxAmount = 64
	}

	RESOURCE
	{
		name = GravityWaves
		amount = 0
		maxAmount = 1000
	}

	RESOURCE
	{
		name = StaticCharge
		amount = 0
		maxAmount = 600
	}

	EFFECTS
	{	
		running
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Blueshift/FX/FusionReactorRunning
				volume = 0.0 0.0
				volume = 0.05 0.5
				volume = 1.0 0.5
				pitch = 0.0 0.0
				pitch = 0.05 0.5
				pitch = 1.0 0.6
				loop = true
			}
		}
	}
	
}

@PART[wsWarpTank250]:NEEDS[WildBlueIndustries/Blueshift&WildBlueIndustries/FlyingSaucers&FarFutureTechnologies]
{
	!TechRequired = experimentalRocketry
	
	TechRequired:NEEDS[CommunityTechTree] = unifiedFieldTheory
	TechRequired:NEEDS[!CommunityTechTree] = wbiWarpTech
	
	%category = Engine
	
	%entryCost = 950000
	%cost = 190000
	
	%title = WP-2500 Gravimetric Displacement Generator
	
	%description = For all the needs of fueling those warp coils, to achieve faster-than-light speed, our engineers came out with this compact but still very functional Gravimetric Displacement Generator. Warranty obviously void once you bring it in space's void.
	
	%mass = 3
	
	%crashTolerance = 20
	%thermalMassModifier = 8.0
	%emissiveConstant = 0.95
	
	%explosionPotential = 0.1
	
	%breakingForce = 500000
	%breakingTorque = 500000
	
	!heatConductivity = 0.04
	
	%tags = ixs warp graviolium
	
	!RESOURCE[LqdDeuterium] { }
	!MODULE[ContainmentSystem] { }
	
	// Graviolium is normally not a tweakable resource, meaning you have to fill up your tanks while in flight.
	// Without Kerbal Flying Saucers, the only way to get the resource is to mine asteroids.
	// But this cheat lets you tweak the resource in the editor.
	MODULE
	{
		name = WBIResourceTweaker
		resourceName = Graviolium
		tweakEnabledName = CHEAT: Enable Graviolium tweak
		tweakDisabledName = CHEAT: Disable Graviolium tweak
	}
	
	MODULE
	{
		name = WBIModuleGeneratorFX
//		debugMode = true

		// Setting this to the same value as WBIWarpEngine's warpPowerGeneratorID field lets the warp engine control the generator.
		// If the generator controls effects and/or animated textures, then they'll be affected by the throttle updates.
		moduleID = warpPower

		// This also replaces the name shown in the editor.
		ConverterName = Auxilary Power

		// Short description of the module as displayed in the editor.
		moduleDescription = Provides auxilary gravitic power.

		StartActionName = Activate Auxiliary Power
		StopActionName = Deactivate Auxiliary Power
		ToggleActionName = Toggle Auxiliary Power

		// Generators can control animated textures
		// Hint: You can control multiple animated textures in the same part if they share the same moduleID.
		//textureModuleID = FusionTorus

		// Generators can control effects too
//		startEffect = effectStart
//		stopEffect = effectStop
		runningEffect = running

		// In hours, the mean time between failures. Assumes that parts require maintenance.
		mtbf = 200

		// The minimum level of skill required to repair the part.
		// You can also change repairSkill, which defaults to "RepairSkill" (Engineers have this).
		// You can also change the repairKitName, which defaults to "evaRepairKit" (the stock EVA Repair Kit).
		minimumSkillLevel = 1

		// When parts require maintenance, how many repair kits are required to repair the part.
		repairKitsRequired = 2

		INPUT_RESOURCE
		{
			ResourceName = Graviolium
			Ratio = 0.004
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdDeuterium
			Ratio = 0.00040875
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 100
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectroPlasma
			Ratio = 2800
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = StaticCharge
			Ratio = 0.004
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
		DRAINED_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 10
		}
	}


	RESOURCE
	{
		name = LqdDeuterium
		amount = 400
		maxAmount = 400
	}

	RESOURCE
	{
		name = Graviolium
		amount = 0
		maxAmount = 64
	}

	RESOURCE
	{
		name = GravityWaves
		amount = 0
		maxAmount = 1000
	}

	RESOURCE
	{
		name = StaticCharge
		amount = 0
		maxAmount = 600
	}

	EFFECTS
	{	
		running
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Blueshift/FX/FusionReactorRunning
				volume = 0.0 0.0
				volume = 0.05 0.5
				volume = 1.0 0.5
				pitch = 0.0 0.0
				pitch = 0.05 0.5
				pitch = 1.0 0.6
				loop = true
			}
		}
	}
	
}

