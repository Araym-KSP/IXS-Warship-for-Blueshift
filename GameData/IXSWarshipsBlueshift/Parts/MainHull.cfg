@PART[wsIXSmainHull]:NEEDS[WildBlueIndustries/Blueshift&WildBlueIndustries/FlyingSaucers&!FarFutureTechnologies]
{
	//extra nodes removed since their integration in original IXS Warships v.0.5.1.1
	//%node_stack_bigdock01 = 0.0, 0.84, -2.355, 0.0, 0.0, -1.0, 2
	//%node_stack_bigdock02 = 0.0, 0.84, 2.355, 0.0, 0.0, 1.0, 2
	//%node_stack_dock02 = 5.96, 0.986, -0.012, 1.0, 0.0, 0.0, 1
	//%node_stack_dock01 = -5.96, 0.986, -0.012, -1.0, 0.0, 0.0, 1

	!MODULE[ModuleResourceConverter] { }
	!MODULE[ModuleB9PartSwitch] { }
	!MODULE[ModuleOverheatDisplay] { }
	
	%cost = 550000
	
	TechRequired:NEEDS[CommunityTechTree] = unifiedFieldTheory
	TechRequired:NEEDS[!CommunityTechTree] = wbiWarpTech

	// Graviolium is normally not a tweakable resource, meaning you have to fill up your tanks while in flight.
	// Without Kerbal Flying Saucers, the only way to get the resource is to mine asteroids.
	// But this cheat lets you tweak the resource in the editor.
	MODULE
	{
		name = WBIResourceTweaker
		resourceName = Graviolium
		tweakEnabledName = CHEAT: Enable Graviolium tweak
		tweakDisabledName = CHEAT: Disable Graviolium tweak
	}


	// Generators are just like the stock resource converter, except that this one can control animated textures and/or Effects.
	// This generator produces the GravityWaves that power warp coils by consuming Graviolium and FusionPellets.
	MODULE
	{
		name = WBIModuleGeneratorFX
		//debugMode = true

		// Setting this to the same value as WBIWarpEngine's warpPowerGeneratorID field lets the warp engine control the generator.
		// If the generator controls effects and/or animated textures, then they'll be affected by the throttle updates.
		moduleID = warpPower

		// This also replaces the name shown in the editor.
		ConverterName = Auxiliary Power

		// Short description of the module as displayed in the editor.
		moduleDescription = Provides auxilary gravitic power.

		StartActionName = Activate Auxiliary Power
		StopActionName = Deactivate Auxiliary Power
		ToggleActionName = Toggle Auxiliary Power

		// Generators can control animated textures
		// Hint: You can control multiple animated textures in the same part if they share the same moduleID.
		//textureModuleID = FusionTorus

		// Generators can control effects too
		//startEffect = effectStart
		//stopEffect = effectStop
		runningEffect = running

		// In hours, the mean time between failures. Assumes that parts require maintenance.
		mtbf = 300

		// The minimum level of skill required to repair the part.
		// You can also change repairSkill, which defaults to "RepairSkill" (Engineers have this).
		// You can also change the repairKitName, which defaults to "evaRepairKit" (the stock EVA Repair Kit).
		minimumSkillLevel = 3

		// When parts require maintenance, how many repair kits are required to repair the part.
		repairKitsRequired = 4

		INPUT_RESOURCE
		{
			ResourceName = Graviolium
			Ratio = 0.01
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = FusionPellets
			Ratio = 0.000188
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 250
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectroPlasma
			Ratio = 3750
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 15
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE:NEEDS[WildBlueIndustries/FlyingSaucers]
		{
			ResourceName = StaticCharge
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
		DRAINED_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 25
		}
	}

	RESOURCE
	{
		name = XenonGas
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectroPlasma
		amount = 0
		maxAmount = 4000
		isTweakable = false
	}
	
		RESOURCE
	{
		name = FusionPellets
		amount = 1080
		maxAmount = 1080
	}
	
	RESOURCE
	{
		name = Graviolium
		amount = 0
		maxAmount = 720
	}

	RESOURCE
	{
		name = StaticCharge
		amount = 0
		maxAmount = 450
	}
	
		RESOURCE
	{
		name = GravityWaves
		amount = 0
		maxAmount = 1500
	}

	EFFECTS
	{	
		running
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Blueshift/FX/FusionReactorRunning
				volume = 0.0 0.0
				volume = 0.05 0.5
				volume = 1.0 0.5
				pitch = 0.0 0.0
				pitch = 0.05 0.5
				pitch = 1.0 0.6
				loop = true
			}
		}
	}

}

@PART[wsIXSmainHull]:NEEDS[WildBlueIndustries/Blueshift&WildBlueIndustries/FlyingSaucers&FarFutureTechnologies]
{

	//extra nodes removed since their integration in original IXS Warships v.0.5.1.1
	//%node_stack_bigdock01 = 0.0, 0.84, -2.355, 0.0, 0.0, -1.0, 2
	//%node_stack_bigdock02 = 0.0, 0.84, 2.355, 0.0, 0.0, 1.0, 2
	//%node_stack_dock02 = 5.96, 0.986, -0.012, 1.0, 0.0, 0.0, 1
	//%node_stack_dock01 = -5.96, 0.986, -0.012, -1.0, 0.0, 0.0, 1

	!MODULE[ModuleResourceConverter] { }
	!MODULE[ModuleB9PartSwitch] { }
	!MODULE[ModuleOverheatDisplay] { }
	
	TechRequired:NEEDS[CommunityTechTree] = unifiedFieldTheory
	TechRequired:NEEDS[!CommunityTechTree] = wbiWarpTech

	%cost = 550000

	// Graviolium is normally not a tweakable resource, meaning you have to fill up your tanks while in flight.
	// Without Kerbal Flying Saucers, the only way to get the resource is to mine asteroids.
	// But this cheat lets you tweak the resource in the editor.
	MODULE
	{
		name = WBIResourceTweaker
		resourceName = Graviolium
		tweakEnabledName = CHEAT: Enable Graviolium tweak
		tweakDisabledName = CHEAT: Disable Graviolium tweak
	}

	// Generators are just like the stock resource converter, except that this one can control animated textures and/or Effects.
	// This generator produces the GravityWaves that power warp coils by consuming Graviolium and FusionPellets.
	MODULE
	{
		name = WBIModuleGeneratorFX
		//debugMode = true

		// Setting this to the same value as WBIWarpEngine's warpPowerGeneratorID field lets the warp engine control the generator.
		// If the generator controls effects and/or animated textures, then they'll be affected by the throttle updates.
		moduleID = warpPower

		// This also replaces the name shown in the editor.
		ConverterName = Auxiliary Power

		// Short description of the module as displayed in the editor.
		moduleDescription = Provides auxilary gravitic power.

		StartActionName = Activate Auxiliary Power
		StopActionName = Deactivate Auxiliary Power
		ToggleActionName = Toggle Auxiliary Power

		// Generators can control animated textures
		// Hint: You can control multiple animated textures in the same part if they share the same moduleID.
		//textureModuleID = FusionTorus

		// Generators can control effects too
		//startEffect = effectStart
		//stopEffect = effectStop
		runningEffect = running

		// In hours, the mean time between failures. Assumes that parts require maintenance.
		mtbf = 300

		// The minimum level of skill required to repair the part.
		// You can also change repairSkill, which defaults to "RepairSkill" (Engineers have this).
		// You can also change the repairKitName, which defaults to "evaRepairKit" (the stock EVA Repair Kit).
		minimumSkillLevel = 3

		// When parts require maintenance, how many repair kits are required to repair the part.
		repairKitsRequired = 4

		INPUT_RESOURCE
		{
			ResourceName = Graviolium
			Ratio = 0.01
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdDeuterium
			Ratio = 0.00109
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 250
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectroPlasma
			Ratio = 3750
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 15
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE:NEEDS[WildBlueIndustries/FlyingSaucers]
		{
			ResourceName = StaticCharge
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
		DRAINED_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 25
		}
	}

	RESOURCE
	{
		name = XenonGas
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectroPlasma
		amount = 0
		maxAmount = 4000
		isTweakable = false
	}
	
		RESOURCE
	{
		name = LqdDeuterium
		amount = 4500
		maxAmount = 4500
	}
	
	RESOURCE
	{
		name = Graviolium
		amount = 0
		maxAmount = 720
	}

	RESOURCE
	{
		name = StaticCharge
		amount = 0
		maxAmount = 450
	}
	
		RESOURCE
	{
		name = GravityWaves
		amount = 0
		maxAmount = 1500
	}

	EFFECTS
	{	
		running
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Blueshift/FX/FusionReactorRunning
				volume = 0.0 0.0
				volume = 0.05 0.5
				volume = 1.0 0.5
				pitch = 0.0 0.0
				pitch = 0.05 0.5
				pitch = 1.0 0.6
				loop = true
			}
		}
	}

}
	{
		name = WBIModuleGeneratorFX
//		debugMode = true

		// Setting this to the same value as WBIWarpEngine's warpPowerGeneratorID field lets the warp engine control the generator.
		// If the generator controls effects and/or animated textures, then they'll be affected by the throttle updates.
		moduleID = warpPower

		// This also replaces the name shown in the editor.
		ConverterName = Auxiliary Power

		// Short description of the module as displayed in the editor.
		moduleDescription = Provides auxilary gravitic power.

		StartActionName = Activate Auxiliary Power
		StopActionName = Deactivate Auxiliary Power
		ToggleActionName = Toggle Auxiliary Power

		// Generators can control animated textures
		// Hint: You can control multiple animated textures in the same part if they share the same moduleID.
		textureModuleID = FusionTorus

		// Generators can control effects too
//		startEffect = effectStart
//		stopEffect = effectStop
		runningEffect = running

		// In hours, the mean time between failures. Assumes that parts require maintenance.
		mtbf = 300

		// The minimum level of skill required to repair the part.
		// You can also change repairSkill, which defaults to "RepairSkill" (Engineers have this).
		// You can also change the repairKitName, which defaults to "evaRepairKit" (the stock EVA Repair Kit).
		minimumSkillLevel = 3

		// When parts require maintenance, how many repair kits are required to repair the part.
		repairKitsRequired = 4

		INPUT_RESOURCE
		{
			ResourceName = Graviolium
			Ratio = 0.01
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = FusionPellets
			Ratio = 0.000188
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 250
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectroPlasma
			Ratio = 3750
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 15
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE:NEEDS[WildBlueIndustries/FlyingSaucers]
		{
			ResourceName = StaticCharge
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
		DRAINED_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 25
		}
	}

	RESOURCE
	{
		name = XenonGas
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectroPlasma
		amount = 0
		maxAmount = 4000
		isTweakable = false
	}
	
		RESOURCE
	{
		name = FusionPellets
		amount = 1080
		maxAmount = 1080
	}
	
	RESOURCE
	{
		name = Graviolium
		amount = 0
		maxAmount = 720
	}

	RESOURCE
	{
		name = StaticCharge
		amount = 0
		maxAmount = 450
	}
	
		RESOURCE
	{
		name = GravityWaves
		amount = 0
		maxAmount = 1500
	}

	EFFECTS
	{	
		running
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Blueshift/FX/FusionReactorRunning
				volume = 0.0 0.0
				volume = 0.05 0.5
				volume = 1.0 0.5
				pitch = 0.0 0.0
				pitch = 0.05 0.5
				pitch = 1.0 0.6
				loop = true
			}
		}
	}

}

@PART[wsIXSmainHull]:NEEDS[WildBlueIndustries/Blueshift&WildBlueIndustries/FlyingSaucers&FarFutureTechnologies]
{

	%node_stack_bigdock01 = 0.0, 0.84, -2.355, 0.0, 0.0, -1.0, 2
	%node_stack_bigdock02 = 0.0, 0.84, 2.355, 0.0, 0.0, 1.0, 2
	%node_stack_dock02 = 5.96, 0.986, -0.012, 1.0, 0.0, 0.0, 1
	%node_stack_dock01 = -5.96, 0.986, -0.012, -1.0, 0.0, 0.0, 1

	!MODULE[ModuleResourceConverter] { }
	!MODULE[ModuleB9PartSwitch] { }
	!MODULE[ModuleOverheatDisplay] { }
	
	TechRequired:NEEDS[CommunityTechTree] = unifiedFieldTheory
	TechRequired:NEEDS[!CommunityTechTree] = wbiWarpTech

	%cost = 550000

	// Graviolium is normally not a tweakable resource, meaning you have to fill up your tanks while in flight.
	// Without Kerbal Flying Saucers, the only way to get the resource is to mine asteroids.
	// But this cheat lets you tweak the resource in the editor.
	MODULE
	{
		name = WBIResourceTweaker
		resourceName = Graviolium
		tweakEnabledName = CHEAT: Enable Graviolium tweak
		tweakDisabledName = CHEAT: Disable Graviolium tweak
	}

	MODULE
	{
		name = WBIAnimatedTexture

		// ID of the module so we can distinguish between several animated textures in one part.
		// This one is controlled by the warp coil.
		moduleID = FusionTorus

		textureTransformName = fusionTorus
		animatedEmissiveTexture = WildBlueIndustries/Blueshift/Parts/Engine/WarpPlasma
		minFramesPerSecond = 50
		maxFramesPerSecond = 50
		emissiveFadeTime = 0.5
	}

	// Generators are just like the stock resource converter, except that this one can control animated textures and/or Effects.
	// This generator produces the GravityWaves that power warp coils by consuming Graviolium and FusionPellets.
	MODULE
	{
		name = WBIModuleGeneratorFX
//		debugMode = true

		// Setting this to the same value as WBIWarpEngine's warpPowerGeneratorID field lets the warp engine control the generator.
		// If the generator controls effects and/or animated textures, then they'll be affected by the throttle updates.
		moduleID = warpPower

		// This also replaces the name shown in the editor.
		ConverterName = Auxiliary Power

		// Short description of the module as displayed in the editor.
		moduleDescription = Provides auxilary gravitic power.

		StartActionName = Activate Auxiliary Power
		StopActionName = Deactivate Auxiliary Power
		ToggleActionName = Toggle Auxiliary Power

		// Generators can control animated textures
		// Hint: You can control multiple animated textures in the same part if they share the same moduleID.
		textureModuleID = FusionTorus

		// Generators can control effects too
//		startEffect = effectStart
//		stopEffect = effectStop
		runningEffect = running

		// In hours, the mean time between failures. Assumes that parts require maintenance.
		mtbf = 300

		// The minimum level of skill required to repair the part.
		// You can also change repairSkill, which defaults to "RepairSkill" (Engineers have this).
		// You can also change the repairKitName, which defaults to "evaRepairKit" (the stock EVA Repair Kit).
		minimumSkillLevel = 3

		// When parts require maintenance, how many repair kits are required to repair the part.
		repairKitsRequired = 4

		INPUT_RESOURCE
		{
			ResourceName = Graviolium
			Ratio = 0.01
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdDeuterium
			Ratio = 0.00109
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 250
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectroPlasma
			Ratio = 3750
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 15
			DumpExcess = true
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE:NEEDS[WildBlueIndustries/FlyingSaucers]
		{
			ResourceName = StaticCharge
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
		DRAINED_RESOURCE
		{
			ResourceName = GravityWaves
			Ratio = 25
		}
	}

	RESOURCE
	{
		name = XenonGas
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 5000
		maxAmount = 5000
	}

	RESOURCE
	{
		name = ElectroPlasma
		amount = 0
		maxAmount = 4000
		isTweakable = false
	}
	
		RESOURCE
	{
		name = LqdDeuterium
		amount = 4500
		maxAmount = 4500
	}
	
	RESOURCE
	{
		name = Graviolium
		amount = 0
		maxAmount = 720
	}

	RESOURCE
	{
		name = StaticCharge
		amount = 0
		maxAmount = 450
	}
	
		RESOURCE
	{
		name = GravityWaves
		amount = 0
		maxAmount = 1500
	}

	EFFECTS
	{	
		running
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Blueshift/FX/FusionReactorRunning
				volume = 0.0 0.0
				volume = 0.05 0.5
				volume = 1.0 0.5
				pitch = 0.0 0.0
				pitch = 0.05 0.5
				pitch = 1.0 0.6
				loop = true
			}
		}
	}

}
